<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
    <!--&lt;!&ndash;properties文件配置&ndash;&gt;-->
    <!--<property name="locations">-->
    <!--<list>-->
    <!--<value>application.properties</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="fileEncoding" value="UTF-8"/>-->
    <!--</bean>-->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.163.com"/>
        <property name="port" value="465"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="username" value="pengyongjun3@163.com"/>
        <!--<property name="password" value="zoeoysfjszdpbiea"/>-->
        <property name="password" value="amwalle1"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.sendpartial">true</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
            </props>
        </property>
    </bean>
    <bean class="com.amwalle.walle.util.Mail">
        <property name="mailSender" ref="mailSender"/>
    </bean>


    <!--&lt;!&ndash;<bean id="taskJob" class="com.amwalle.walle.scheduler.QuartzJobFactory"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="group" value="DEFAULT"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="name" value="job_work_name"/>&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;false表示等上一个任务执行完后再开启新的任务&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="concurrent" value="false"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="targetObject">&ndash;&gt;-->
            <!--&lt;!&ndash;<ref bean="taskJob"/>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="targetMethod">&ndash;&gt;-->
            <!--&lt;!&ndash;<value>execute</value>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->
    <!--<bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
        <!--<property name="name" value="work_default_name"/>-->
        <!--<property name="group" value="DEFAULT"/>-->

        <!--<property name="cronExpression">-->
            <!--<value>0/5 * * * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="triggers">-->
            <!--<list>-->
                <!--&lt;!&ndash;<ref bean="myTrigger"/>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean class="com.amwalle.walle.scheduler.JobManager">-->
        <!--<property name="schedulerFactoryBean" ref="scheduler"/>-->
    <!--</bean>-->

    <!--<bean id="schedulerFactoryBean" lazy-init="false" autowire="no" class="com.amwalle.walle.scheduler.MyJobFactory" />-->
    <bean id="jobFactory" class="com.amwalle.walle.scheduler.MyJobFactory"/>
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobFactory" ref="jobFactory"/>
    </bean>

</beans>